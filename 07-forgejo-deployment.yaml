apiVersion: apps/v1
kind: Deployment
metadata:
  name: forgejo
  namespace: forgejo
  labels:
    app: forgejo
    component: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: forgejo
      component: web
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: forgejo
        component: web
      annotations:
        # Force pod restart on config changes
        checksum/config: "{{ include (print $.Template.BasePath \"/configmap.yaml\") . | sha256sum }}"
    spec:
      nodeSelector:
        kubernetes.io/hostname: binning.net
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - binning.net
      securityContext:
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      # Absurdly, Forgejo creates a gitea.rsa and gitea.rsa.pub key as root but tries to access them as git.
      # An init container is needed to address this.
      initContainers:
      - name: init-ssh-dir
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          mkdir -p /data/ssh
          # Remove old SSH keys that might have wrong ownership
          rm -f /data/ssh/gitea.rsa /data/ssh/gitea.rsa.pub
          chown -R 1000:1000 /data/ssh
          chmod 700 /data/ssh
          find /data/ssh -type f -exec chmod 600 {} \; 2>/dev/null || true
        volumeMounts:
        - name: forgejo-data
          mountPath: /data
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
      - name: forgejo
        image: codeberg.org/forgejo/forgejo:12.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        - containerPort: 2222
          name: ssh
          protocol: TCP
        envFrom:
        - configMapRef:
            name: forgejo-config
        - secretRef:
            name: forgejo-secret
        volumeMounts:
        - name: forgejo-data
          mountPath: /data
        - name: timezone
          mountPath: /etc/timezone
          readOnly: true
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
            ephemeral-storage: "2Gi"
        startupProbe:
          httpGet:
            path: /api/healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /api/healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /api/healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
      volumes:
      - name: forgejo-data
        persistentVolumeClaim:
          claimName: forgejo-data-pvc
      - name: timezone
        hostPath:
          path: /etc/timezone
      - name: localtime
        hostPath:
          path: /etc/localtime
---
apiVersion: v1
kind: Service
metadata:
  name: forgejo-svc
  namespace: forgejo
  labels:
    app: forgejo
    component: web
spec:
  selector:
    app: forgejo
    component: web
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  - name: ssh
    port: 22
    targetPort: 2222
    protocol: TCP
  type: ClusterIP
